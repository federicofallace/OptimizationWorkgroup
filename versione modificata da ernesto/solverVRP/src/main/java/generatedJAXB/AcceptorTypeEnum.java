//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.21 at 08:31:12 PM CET 
//


package generatedJAXB;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for acceptorTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="acceptorTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="acceptNewRemoveWorst"/>
 *     &lt;enumeration value="schrimpfAcceptance"/>
 *     &lt;enumeration value="experimentalSchrimpfAcceptance"/>
 *     &lt;enumeration value="acceptNewRemoveFirst"/>
 *     &lt;enumeration value="greedyAcceptance"/>
 *     &lt;enumeration value="greedyAcceptance_minVehFirst"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "acceptorTypeEnum")
@XmlEnum
public enum AcceptorTypeEnum {

    @XmlEnumValue("acceptNewRemoveWorst")
    ACCEPT_NEW_REMOVE_WORST("acceptNewRemoveWorst"),
    @XmlEnumValue("schrimpfAcceptance")
    SCHRIMPF_ACCEPTANCE("schrimpfAcceptance"),
    @XmlEnumValue("experimentalSchrimpfAcceptance")
    EXPERIMENTAL_SCHRIMPF_ACCEPTANCE("experimentalSchrimpfAcceptance"),
    @XmlEnumValue("acceptNewRemoveFirst")
    ACCEPT_NEW_REMOVE_FIRST("acceptNewRemoveFirst"),
    @XmlEnumValue("greedyAcceptance")
    GREEDY_ACCEPTANCE("greedyAcceptance"),
    @XmlEnumValue("greedyAcceptance_minVehFirst")
    GREEDY_ACCEPTANCE_MIN_VEH_FIRST("greedyAcceptance_minVehFirst");
    private final String value;

    AcceptorTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AcceptorTypeEnum fromValue(String v) {
        for (AcceptorTypeEnum c: AcceptorTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
