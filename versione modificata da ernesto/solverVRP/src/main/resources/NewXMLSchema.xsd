<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ Copyright (C) 2014  Stefan Schroeder
  ~
  ~ This library is free software; you can redistribute it and/or
  ~ modify it under the terms of the GNU Lesser General Public
  ~ License as published by the Free Software Foundation; either
  ~ version 3.0 of the License, or (at your option) any later version.
  ~
  ~ This library is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this library.  If not, see <http://www.gnu.org/licenses/>.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.w3schools.com"
	xmlns="http://www.w3schools.com" elementFormDefault="qualified">

<xs:element name="algorithm">
	<xs:complexType>
		<xs:sequence>
            <xs:choice>
                <xs:element name="iterations" type="xs:integer" minOccurs="0" maxOccurs="1"/>
                <xs:element name="maxIterations" type="xs:integer" minOccurs="0" maxOccurs="1"/>
            </xs:choice>

            <xs:choice>
                <xs:element name="prematureBreak" type="prematureBreakType" minOccurs="0" maxOccurs="1"/>
                <xs:element name="terminationCriteria">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="termination" type="prematureBreakType" minOccurs="0" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>

                </xs:element>
            </xs:choice>



			<xs:element name="construction" minOccurs="0" maxOccurs="1">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="insertion" type="insertionType" minOccurs="1" maxOccurs="1"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			
			<xs:element name="strategy">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="memory" type="xs:integer" minOccurs="0" maxOccurs="1" default="1"/>
						<xs:element name="searchStrategies" minOccurs="1" maxOccurs="1">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="searchStrategy" type="searchStrategyType" minOccurs="1" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>

		</xs:sequence>
	</xs:complexType>
</xs:element>

<xs:complexType name="searchStrategyType">
	<xs:sequence>
		<xs:element name="selector" type="selectorType"/>
		<xs:element name="acceptor" type="acceptorType"/>
		<xs:element name="modules" minOccurs="1" maxOccurs="1">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="module" type="moduleType" minOccurs="1" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
		</xs:element>
		<xs:element name="probability">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
					<xs:maxInclusive value="1.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:element>
	</xs:sequence>
	<xs:attribute name="name" type="xs:string"/>
</xs:complexType>

<xs:complexType name="selectorType">
	<xs:attribute name="name" type="selectorTypeEnum">
	</xs:attribute>
</xs:complexType>

<xs:simpleType name="selectorTypeEnum">
	<xs:restriction base="xs:string">
			<xs:enumeration value="selectBest"/>
			<xs:enumeration value="selectRandomly"/>
		</xs:restriction>
</xs:simpleType>

<xs:complexType name="acceptorType">
	<xs:sequence>
		<xs:element name="alpha" type="xs:double" minOccurs="0" maxOccurs="1"/>
		<xs:choice>
			<xs:element name="warmup" type="xs:int" minOccurs="0" maxOccurs="1"/>
			<xs:element name="initialThreshold" type="xs:double" minOccurs="0" maxOccurs="1"/>
		</xs:choice>
		
	</xs:sequence>
	<xs:attribute name="name" type="acceptorTypeEnum">
	</xs:attribute>
	
</xs:complexType>

<xs:simpleType name="acceptorTypeEnum">
	<xs:restriction base="xs:string">
		<xs:enumeration value="acceptNewRemoveWorst"/>
		<xs:enumeration value="schrimpfAcceptance"/>
		<xs:enumeration value="experimentalSchrimpfAcceptance"/>
		<xs:enumeration value="acceptNewRemoveFirst"/>
		<xs:enumeration value="greedyAcceptance"/>
		<xs:enumeration value="greedyAcceptance_minVehFirst"/>
	</xs:restriction>
</xs:simpleType>

<xs:complexType name="prematureBreakType">
	<xs:choice>
		<xs:element name="pBreak_iteration_group" type="PrematureBreakIterationTypeGroup"/>
		<xs:element name="pBreak_time_group" type="PrematureBreakTimeTypeGroup"/>
		<xs:element name="pBreak_variationCoefficient_group" type="PrematureBreakVariationCoefficientTypeGroup"/>
	</xs:choice>
	<xs:attribute name="basedOn" type="prematureBreakTypeEnum">
	</xs:attribute>
</xs:complexType>

<xs:simpleType name="prematureBreakTypeEnum">
	<xs:restriction base="xs:string">
		<xs:enumeration value="time"/>
		<xs:enumeration value="iterations"/>
		<xs:enumeration value="variationCoefficient"/>
	</xs:restriction>
</xs:simpleType>

<xs:complexType name="PrematureBreakIterationTypeGroup">
	<xs:sequence>
		<xs:element name="iterations" type="xs:integer" minOccurs="1" maxOccurs="1"/>
	</xs:sequence>	
</xs:complexType>

<xs:complexType name="PrematureBreakTimeTypeGroup">
	<xs:sequence>
		<xs:element name="time" type="xs:long" minOccurs="1" maxOccurs="1"/>
	</xs:sequence>	
</xs:complexType>

<xs:complexType name="PrematureBreakVariationCoefficientTypeGroup">
	<xs:sequence>
		<xs:element name="threshold" type="xs:double" minOccurs="1" maxOccurs="1"/>
		<xs:element name="iterations" type="xs:integer" minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="moduleType">
	<xs:choice>
		<xs:element name="ruin_and_recreate_group" type="RuinAndRecreateGroupType"/>
		<xs:element name="gendreau_group" type="GendreauGroupType"/>
	</xs:choice>
	<xs:attribute name="name" type="moduleTypeEnum">
	</xs:attribute>
</xs:complexType>

<xs:simpleType name="moduleTypeEnum">
	<xs:restriction base="xs:string">
		<xs:enumeration value="ruin_and_recreate"/>
		<xs:enumeration value="gendreau"/>
	</xs:restriction>
</xs:simpleType>

<xs:complexType name="RuinAndRecreateGroupType">
	<xs:sequence>
		<xs:element name="ruin" type="ruinType"/>
		<xs:element name="insertion" type="insertionType"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="GendreauGroupType">
	<xs:sequence>
		<xs:element name="iterations" type="xs:integer"/>
		<xs:element name="share" type="xs:double"/>
		<xs:element name="ruin" type="ruinType"/>
		<xs:element name="insertion" type="insertionType"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="ruinType">
	<xs:sequence>
		<xs:element name="share" minOccurs="0" maxOccurs="1">
			<xs:simpleType>
				<xs:restriction base="xs:double">
					<xs:minInclusive value="0.0"/>
					<xs:maxInclusive value="1.0"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:element>
		<xs:element name="distance" minOccurs="0" maxOccurs="1">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="euclidean"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:element>
	</xs:sequence>
	<xs:attribute name="name" use="required" type="ruinTypeEnum">
	</xs:attribute>
	<xs:attribute name="id" type="xs:string"/>
		
</xs:complexType>

<xs:simpleType name="ruinTypeEnum">
	<xs:restriction base="xs:string">
		<xs:enumeration value="randomRuin"/>
		<xs:enumeration value="radialRuin"/>
	</xs:restriction>
</xs:simpleType>


<xs:complexType name="insertionType">
	<xs:all>
		<xs:element name="level" minOccurs="0" maxOccurs="1">
			<xs:complexType>
				<xs:simpleContent>
					<xs:extension base="xs:string">
						<xs:attribute name="forwardLooking" type="xs:string"/>
						<xs:attribute name="memory" type="xs:string"/>
					</xs:extension>
				</xs:simpleContent>	
			</xs:complexType>	
		</xs:element>
		<xs:element name="considerFixedCosts" minOccurs="0" maxOccurs="1">
			<xs:complexType>
				<xs:simpleContent>
					<xs:extension base="xs:string">
						<xs:attribute name="weight" type="xs:double"/>			
					</xs:extension>
				</xs:simpleContent>
					
			</xs:complexType>
		</xs:element>
		<xs:element name="allowVehicleSwitch" type="xs:boolean" minOccurs="0" maxOccurs="1"/>
		<xs:element name="experimental" minOccurs="0" maxOccurs="1">
			<xs:complexType>
				<xs:sequence>
					<xs:any minOccurs="0"/>
				</xs:sequence>
				<xs:attribute name="timeSlice" type="xs:string"/>
				<xs:attribute name="neighboringSlices" type="xs:string"/>
			</xs:complexType>
			
		</xs:element>

	</xs:all>
	<xs:attribute name="name" use="required" type="insertionTypeEnum">
	</xs:attribute>
	<xs:attribute name="id" type="xs:string"/>
				 
</xs:complexType>

<xs:simpleType name="insertionTypeEnum">
	<xs:restriction base="xs:string">
		<xs:enumeration value="bestInsertion" />
		<xs:enumeration value="regretInsertion" />
	</xs:restriction>
</xs:simpleType>

</xs:schema>
